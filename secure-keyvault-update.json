{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "11534002504100546779"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Updates the existing Key Vault to be secure with private endpoint"
      }
    },
    "environment": {
      "type": "string",
      "metadata": {
        "description": "Environment name"
      }
    },
    "workloadName": {
      "type": "string",
      "metadata": {
        "description": "Workload name"
      }
    },
    "existingKeyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Existing Key Vault name to secure"
      }
    },
    "privateEndpointSubnetId": {
      "type": "string",
      "metadata": {
        "description": "Private endpoint subnet ID"
      }
    },
    "spokeVnetId": {
      "type": "string",
      "metadata": {
        "description": "Spoke VNet ID for private DNS zone linking"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Common resource tags"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[parameters('existingKeyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[tenant().tenantId]",
        "enableRbacAuthorization": true,
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": true,
        "enableSoftDelete": true,
        "enablePurgeProtection": true,
        "softDeleteRetentionInDays": 7,
        "publicNetworkAccess": "Disabled",
        "networkAcls": {
          "defaultAction": "Deny",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[format('privatelink{0}', environment().suffixes.keyvaultDns)]",
      "location": "global",
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', format('privatelink{0}', environment().suffixes.keyvaultDns), format('link-to-{0}-spoke-vnet', parameters('workloadName')))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[parameters('spokeVnetId')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink{0}', environment().suffixes.keyvaultDns))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2023-11-01",
      "name": "[format('pep-kv-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "subnet": {
          "id": "[parameters('privateEndpointSubnetId')]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "keyVaultConnection",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('existingKeyVaultName'))]",
              "groupIds": [
                "vault"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('existingKeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}/{1}', format('pep-kv-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), 'default')]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "privatelink-vault-azure-net",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink{0}', environment().suffixes.keyvaultDns))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink{0}', environment().suffixes.keyvaultDns))]",
        "[resourceId('Microsoft.Network/privateEndpoints', format('pep-kv-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
      ]
    }
  ],
  "outputs": {
    "keyVaultId": {
      "type": "string",
      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('existingKeyVaultName'))]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[parameters('existingKeyVaultName')]"
    },
    "keyVaultUri": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('existingKeyVaultName')), '2023-07-01').vaultUri]"
    },
    "privateEndpointId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/privateEndpoints', format('pep-kv-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
    },
    "privateDnsZoneId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink{0}', environment().suffixes.keyvaultDns))]"
    }
  }
}