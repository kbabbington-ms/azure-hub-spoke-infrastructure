{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "4178390841713411012"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "prod",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "The environment name (dev, test, prod)"
      }
    },
    "workloadName": {
      "type": "string",
      "defaultValue": "platform-ops",
      "metadata": {
        "description": "The workload name"
      }
    },
    "hubVnetAddressSpace": {
      "type": "string",
      "defaultValue": "192.16.1.0/24",
      "metadata": {
        "description": "Hub VNet address space"
      }
    },
    "spokeVnetAddressSpace": {
      "type": "string",
      "defaultValue": "192.16.2.0/24",
      "metadata": {
        "description": "Spoke VNet address space"
      }
    },
    "vmAdminUsername": {
      "type": "string",
      "defaultValue": "azureadmin",
      "metadata": {
        "description": "VM admin username"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "VM admin password"
      }
    },
    "sqlAdminLogin": {
      "type": "string",
      "defaultValue": "sqladmin",
      "metadata": {
        "description": "SQL MI administrator login"
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "SQL MI administrator password"
      }
    },
    "existingKeyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing Key Vault created by the foundation deployment"
      }
    },
    "existingKeyVaultId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the existing Key Vault created by the foundation deployment"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Environment": "[parameters('environment')]",
        "Workload": "[parameters('workloadName')]",
        "Created-By": "Bicep",
        "Created-Date": "[utcNow('yyyy-MM-dd')]"
      },
      "metadata": {
        "description": "Tags to apply to all resources"
      }
    }
  },
  "variables": {
    "bastionSubnetAddressSpace": "[cidrSubnet(parameters('hubVnetAddressSpace'), 26, 0)]",
    "vmSubnetAddressSpace": "[cidrSubnet(parameters('spokeVnetAddressSpace'), 26, 0)]",
    "privateEndpointSubnetAddressSpace": "[cidrSubnet(parameters('spokeVnetAddressSpace'), 28, 4)]",
    "sqlMiSubnetAddressSpace": "[cidrSubnet(parameters('spokeVnetAddressSpace'), 27, 4)]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy-hub-vnet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "workloadName": {
            "value": "[parameters('workloadName')]"
          },
          "hubVnetAddressSpace": {
            "value": "[parameters('hubVnetAddressSpace')]"
          },
          "bastionSubnetAddressSpace": {
            "value": "[variables('bastionSubnetAddressSpace')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11049432961084469759"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for all resources"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "The environment name (dev, test, prod)"
              }
            },
            "workloadName": {
              "type": "string",
              "metadata": {
                "description": "The workload name"
              }
            },
            "hubVnetAddressSpace": {
              "type": "string",
              "defaultValue": "192.16.1.0/24",
              "metadata": {
                "description": "Hub VNet address space"
              }
            },
            "bastionSubnetAddressSpace": {
              "type": "string",
              "defaultValue": "192.16.1.0/26",
              "metadata": {
                "description": "Bastion subnet address space"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-11-01",
              "name": "[format('vnet-hub-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('hubVnetAddressSpace')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "AzureBastionSubnet",
                    "properties": {
                      "addressPrefix": "[parameters('bastionSubnetAddressSpace')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2023-11-01",
              "name": "[format('nsg-bastion-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowHttpsInbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "Internet",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowGatewayManagerInbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowAzureLoadBalancerInbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 140,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowBastionHostCommunication",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ],
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 150,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowSshRdpOutbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "22",
                        "3389"
                      ],
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AllowAzureCloudOutbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "AzureCloud",
                      "access": "Allow",
                      "priority": 110,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AllowBastionCommunication",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ],
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AllowGetSessionInformation",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Outbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2023-11-01",
              "name": "[format('{0}/{1}', format('vnet-hub-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), 'AzureBastionSubnet')]",
              "properties": {
                "addressPrefix": "[parameters('bastionSubnetAddressSpace')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-bastion-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-bastion-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]",
                "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-hub-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
              ]
            }
          ],
          "outputs": {
            "hubVnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-hub-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            },
            "hubVnetName": {
              "type": "string",
              "value": "[format('vnet-hub-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]"
            },
            "bastionSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-hub-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), 'AzureBastionSubnet')]"
            },
            "bastionNsgId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-bastion-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy-spoke-vnet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "workloadName": {
            "value": "[parameters('workloadName')]"
          },
          "spokeVnetAddressSpace": {
            "value": "[parameters('spokeVnetAddressSpace')]"
          },
          "vmSubnetAddressSpace": {
            "value": "[variables('vmSubnetAddressSpace')]"
          },
          "privateEndpointSubnetAddressSpace": {
            "value": "[variables('privateEndpointSubnetAddressSpace')]"
          },
          "sqlMiSubnetAddressSpace": {
            "value": "[variables('sqlMiSubnetAddressSpace')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "8329844340548007253"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for all resources"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "The environment name (dev, test, prod)"
              }
            },
            "workloadName": {
              "type": "string",
              "metadata": {
                "description": "The workload name"
              }
            },
            "spokeVnetAddressSpace": {
              "type": "string",
              "defaultValue": "192.16.2.0/24",
              "metadata": {
                "description": "Spoke VNet address space"
              }
            },
            "vmSubnetAddressSpace": {
              "type": "string",
              "defaultValue": "192.16.2.0/26",
              "metadata": {
                "description": "VM subnet address space"
              }
            },
            "privateEndpointSubnetAddressSpace": {
              "type": "string",
              "defaultValue": "192.16.2.64/28",
              "metadata": {
                "description": "Private endpoint subnet address space"
              }
            },
            "sqlMiSubnetAddressSpace": {
              "type": "string",
              "defaultValue": "192.16.2.128/27",
              "metadata": {
                "description": "SQL MI subnet address space"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-11-01",
              "name": "[format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('spokeVnetAddressSpace')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[format('snet-vm-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
                    "properties": {
                      "addressPrefix": "[parameters('vmSubnetAddressSpace')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[format('snet-pep-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
                    "properties": {
                      "addressPrefix": "[parameters('privateEndpointSubnetAddressSpace')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[format('snet-sqlmi-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
                    "properties": {
                      "addressPrefix": "[parameters('sqlMiSubnetAddressSpace')]",
                      "delegations": [
                        {
                          "name": "sqlMiDelegation",
                          "properties": {
                            "serviceName": "Microsoft.Sql/managedInstances"
                          }
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2023-11-01",
              "name": "[format('nsg-vm-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowRdpFromBastion",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3389",
                      "sourceAddressPrefix": "192.16.1.0/26",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowWinRMFromBastion",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "5985",
                        "5986"
                      ],
                      "sourceAddressPrefix": "192.16.1.0/26",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 110,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "DenyAllInbound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Deny",
                      "priority": 4096,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowInternetOutbound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AllowVNetOutbound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 110,
                      "direction": "Outbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2023-11-01",
              "name": "[format('nsg-pep-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowVNetInbound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "DenyAllInbound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Deny",
                      "priority": 4096,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2023-11-01",
              "name": "[format('nsg-sqlmi-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "allow_management_inbound",
                    "properties": {
                      "priority": 106,
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRanges": [
                        "9000",
                        "9003",
                        "1438",
                        "1440",
                        "1452"
                      ],
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "name": "allow_misubnet_inbound",
                    "properties": {
                      "priority": 200,
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRange": "*",
                      "protocol": "*",
                      "sourceAddressPrefix": "[parameters('sqlMiSubnetAddressSpace')]",
                      "destinationAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "name": "allow_health_probe_inbound",
                    "properties": {
                      "priority": 300,
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRange": "*",
                      "protocol": "*",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "destinationAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "name": "allow_management_outbound",
                    "properties": {
                      "priority": 102,
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRanges": [
                        "80",
                        "443",
                        "12000"
                      ],
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "name": "allow_misubnet_outbound",
                    "properties": {
                      "priority": 200,
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRange": "*",
                      "protocol": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "[parameters('sqlMiSubnetAddressSpace')]",
                      "sourcePortRange": "*"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2023-11-01",
              "name": "[format('{0}/{1}', format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), format('snet-vm-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]",
              "properties": {
                "addressPrefix": "[parameters('vmSubnetAddressSpace')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-vm-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-vm-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2023-11-01",
              "name": "[format('{0}/{1}', format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), format('snet-pep-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]",
              "properties": {
                "addressPrefix": "[parameters('privateEndpointSubnetAddressSpace')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-pep-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Disabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-pep-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]",
                "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), format('snet-vm-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2023-11-01",
              "name": "[format('{0}/{1}', format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), format('snet-sqlmi-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]",
              "properties": {
                "addressPrefix": "[parameters('sqlMiSubnetAddressSpace')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-sqlmi-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
                },
                "delegations": [
                  {
                    "name": "sqlMiDelegation",
                    "properties": {
                      "serviceName": "Microsoft.Sql/managedInstances"
                    }
                  }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), format('snet-pep-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]",
                "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-sqlmi-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
              ]
            }
          ],
          "outputs": {
            "spokeVnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            },
            "spokeVnetName": {
              "type": "string",
              "value": "[format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]"
            },
            "vmSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), format('snet-vm-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            },
            "privateEndpointSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), format('snet-pep-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            },
            "sqlMiSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-spoke-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), format('snet-sqlmi-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            },
            "vmNsgId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-vm-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            },
            "pepNsgId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-pep-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            },
            "sqlMiNsgId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-sqlmi-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy-vnet-peering",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "hubVnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-hub-vnet'), '2022-09-01').outputs.hubVnetId.value]"
          },
          "spokeVnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-spoke-vnet'), '2022-09-01').outputs.spokeVnetId.value]"
          },
          "hubVnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-hub-vnet'), '2022-09-01').outputs.hubVnetName.value]"
          },
          "spokeVnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-spoke-vnet'), '2022-09-01').outputs.spokeVnetName.value]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "workloadName": {
            "value": "[parameters('workloadName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "286883216774108781"
            }
          },
          "parameters": {
            "hubVnetId": {
              "type": "string",
              "metadata": {
                "description": "Hub VNet resource ID"
              }
            },
            "spokeVnetId": {
              "type": "string",
              "metadata": {
                "description": "Spoke VNet resource ID"
              }
            },
            "hubVnetName": {
              "type": "string",
              "metadata": {
                "description": "Hub VNet name"
              }
            },
            "spokeVnetName": {
              "type": "string",
              "metadata": {
                "description": "Spoke VNet name"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "The environment name (dev, test, prod)"
              }
            },
            "workloadName": {
              "type": "string",
              "metadata": {
                "description": "The workload name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2023-11-01",
              "name": "[format('{0}/peer-hub-to-spoke-{1}-{2}', parameters('hubVnetName'), parameters('workloadName'), parameters('environment'))]",
              "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                  "id": "[parameters('spokeVnetId')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2023-11-01",
              "name": "[format('{0}/peer-spoke-to-hub-{1}-{2}', parameters('spokeVnetName'), parameters('workloadName'), parameters('environment'))]",
              "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                  "id": "[parameters('hubVnetId')]"
                }
              }
            }
          ],
          "outputs": {
            "hubToSpokePeeringId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', split(format('{0}/peer-hub-to-spoke-{1}-{2}', parameters('hubVnetName'), parameters('workloadName'), parameters('environment')), '/')[0], split(format('{0}/peer-hub-to-spoke-{1}-{2}', parameters('hubVnetName'), parameters('workloadName'), parameters('environment')), '/')[1])]"
            },
            "spokeToHubPeeringId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', split(format('{0}/peer-spoke-to-hub-{1}-{2}', parameters('spokeVnetName'), parameters('workloadName'), parameters('environment')), '/')[0], split(format('{0}/peer-spoke-to-hub-{1}-{2}', parameters('spokeVnetName'), parameters('workloadName'), parameters('environment')), '/')[1])]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deploy-hub-vnet')]",
        "[resourceId('Microsoft.Resources/deployments', 'deploy-spoke-vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy-virtual-machine",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "workloadName": {
            "value": "[parameters('workloadName')]"
          },
          "vmSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-spoke-vnet'), '2022-09-01').outputs.vmSubnetId.value]"
          },
          "keyVaultId": {
            "value": "[parameters('existingKeyVaultId')]"
          },
          "vmAdminUsername": {
            "value": "[parameters('vmAdminUsername')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('vmAdminPassword')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11283648813055280040"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for all resources"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "The environment name (dev, test, prod)"
              }
            },
            "workloadName": {
              "type": "string",
              "metadata": {
                "description": "The workload name"
              }
            },
            "vmSubnetId": {
              "type": "string",
              "metadata": {
                "description": "VM subnet resource ID"
              }
            },
            "keyVaultId": {
              "type": "string",
              "metadata": {
                "description": "Key Vault resource ID for storing VM admin password"
              }
            },
            "vmAdminUsername": {
              "type": "string",
              "defaultValue": "azureadmin",
              "metadata": {
                "description": "VM admin username"
              }
            },
            "vmAdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "VM admin password"
              }
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_D4s_v5",
              "metadata": {
                "description": "VM size"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[format('st{0}', take(uniqueString(resourceGroup().id), 21))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "encryption": {
                  "services": {
                    "blob": {
                      "enabled": true
                    },
                    "file": {
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                  "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2023-11-01",
              "name": "[format('nic-vm-{0}-{1}-001', parameters('workloadName'), parameters('environment'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('vmSubnetId')]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2023-09-01",
              "name": "[format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('osdisk-vm-{0}-{1}-001', parameters('workloadName'), parameters('environment'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    },
                    "diskSizeGB": 127
                  }
                },
                "osProfile": {
                  "computerName": "[format('vm-{0}-001', take(parameters('workloadName'), 8))]",
                  "adminUsername": "[parameters('vmAdminUsername')]",
                  "adminPassword": "[parameters('vmAdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault"
                    }
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('nic-vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')))]",
                      "properties": {
                        "primary": true
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('st{0}', take(uniqueString(resourceGroup().id), 21))), '2023-01-01').primaryEndpoints.blob]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', take(uniqueString(resourceGroup().id), 21)))]",
                "[resourceId('Microsoft.Network/networkInterfaces', format('nic-vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2023-09-01",
              "name": "[format('{0}/{1}', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')), 'AzureMonitorWindowsAgent')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Monitor",
                "type": "AzureMonitorWindowsAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "enableAutomaticUpgrade": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2023-09-01",
              "name": "[format('{0}/{1}', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')), 'IaaSAntimalware')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Security",
                "type": "IaaSAntimalware",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "AntimalwareEnabled": true,
                  "RealtimeProtectionEnabled": true,
                  "ScheduledScanSettings": {
                    "isEnabled": true,
                    "day": 7,
                    "time": 120,
                    "scanType": "Quick"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')), 'AzureMonitorWindowsAgent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2023-09-01",
              "name": "[format('{0}/{1}', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')), 'AADLoginForWindows')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.ActiveDirectory",
                "type": "AADLoginForWindows",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "mdmId": ""
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')), 'IaaSAntimalware')]",
                "[resourceId('Microsoft.Compute/virtualMachines', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2023-09-01",
              "name": "[format('{0}/{1}', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')), 'CustomScriptExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -Command \"Set-TimeZone -Id 'Central Standard Time'; Write-Host 'VM configured successfully'\""
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')), 'AADLoginForWindows')]",
                "[resourceId('Microsoft.Compute/virtualMachines', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/vm-admin-password', last(split(parameters('keyVaultId'), '/')))]",
              "properties": {
                "value": "[parameters('vmAdminPassword')]",
                "attributes": {
                  "enabled": true
                }
              }
            }
          ],
          "outputs": {
            "vmId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')))]"
            },
            "vmName": {
              "type": "string",
              "value": "[format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment'))]"
            },
            "vmPrivateIpAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('nic-vm-{0}-{1}-001', parameters('workloadName'), parameters('environment'))), '2023-11-01').ipConfigurations[0].properties.privateIPAddress]"
            },
            "vmNetworkInterfaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkInterfaces', format('nic-vm-{0}-{1}-001', parameters('workloadName'), parameters('environment')))]"
            },
            "bootDiagStorageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', take(uniqueString(resourceGroup().id), 21)))]"
            },
            "vmSystemAssignedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Compute/virtualMachines', format('vm-{0}-{1}-001', parameters('workloadName'), parameters('environment'))), '2023-09-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deploy-spoke-vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy-sql-database",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "workloadName": {
            "value": "[parameters('workloadName')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-spoke-vnet'), '2022-09-01').outputs.privateEndpointSubnetId.value]"
          },
          "spokeVnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-spoke-vnet'), '2022-09-01').outputs.spokeVnetId.value]"
          },
          "sqlAdminLogin": {
            "value": "[parameters('sqlAdminLogin')]"
          },
          "sqlAdminPassword": {
            "value": "[parameters('sqlAdminPassword')]"
          },
          "keyVaultId": {
            "value": "[parameters('existingKeyVaultId')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "12174848188791219509"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for all resources"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "The environment name (dev, test, prod)"
              }
            },
            "workloadName": {
              "type": "string",
              "metadata": {
                "description": "The workload name"
              }
            },
            "privateEndpointSubnetId": {
              "type": "string",
              "metadata": {
                "description": "Private endpoint subnet resource ID"
              }
            },
            "spokeVnetId": {
              "type": "string",
              "metadata": {
                "description": "Spoke VNet resource ID for private DNS zone"
              }
            },
            "sqlAdminLogin": {
              "type": "string",
              "defaultValue": "sqladmin",
              "metadata": {
                "description": "SQL administrator login"
              }
            },
            "sqlAdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "SQL administrator password"
              }
            },
            "keyVaultId": {
              "type": "string",
              "metadata": {
                "description": "Key Vault resource ID for storing SQL admin password"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2023-08-01-preview",
              "name": "[format('sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "administratorLogin": "[parameters('sqlAdminLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Disabled"
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2023-08-01-preview",
              "name": "[format('{0}/{1}', format('sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), format('sqldb-{0}-{1}', parameters('workloadName'), parameters('environment')))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 1
              },
              "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 34359738368,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "requestedBackupStorageRedundancy": "Local",
                "isLedgerOn": false,
                "useFreeLimit": false,
                "freeLimitExhaustionBehavior": "AutoPause",
                "autoPauseDelay": 60,
                "minCapacity": "[json('0.5')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', format('sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[format('privatelink{0}', environment().suffixes.sqlServerHostname)]",
              "location": "global",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', format('privatelink{0}', environment().suffixes.sqlServerHostname), format('link-to-{0}-spoke-vnet', parameters('workloadName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('spokeVnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink{0}', environment().suffixes.sqlServerHostname))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-11-01",
              "name": "[format('pep-sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "sqlServerConnection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Sql/servers', format('sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]",
                      "groupIds": [
                        "sqlServer"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', format('sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-11-01",
              "name": "[format('{0}/{1}', format('pep-sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink-database-windows-net",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink{0}', environment().suffixes.sqlServerHostname))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink{0}', environment().suffixes.sqlServerHostname))]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('pep-sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/sql-admin-password', last(split(parameters('keyVaultId'), '/')))]",
              "properties": {
                "value": "[parameters('sqlAdminPassword')]",
                "contentType": "SQL Server Administrator Password",
                "attributes": {
                  "enabled": true
                }
              }
            }
          ],
          "outputs": {
            "sqlServerName": {
              "type": "string",
              "value": "[format('sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]"
            },
            "sqlServerFqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Sql/servers', format('sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))), '2023-08-01-preview').fullyQualifiedDomainName]"
            },
            "sqlDatabaseName": {
              "type": "string",
              "value": "[format('sqldb-{0}-{1}', parameters('workloadName'), parameters('environment'))]"
            },
            "sqlServerResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Sql/servers', format('sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            },
            "sqlDatabaseResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Sql/servers/databases', format('sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')), format('sqldb-{0}-{1}', parameters('workloadName'), parameters('environment')))]"
            },
            "sqlPrivateEndpointName": {
              "type": "string",
              "value": "[format('pep-sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]"
            },
            "sqlPrivateEndpointId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateEndpoints', format('pep-sql-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deploy-spoke-vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy-bastion",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "workloadName": {
            "value": "[parameters('workloadName')]"
          },
          "bastionSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-hub-vnet'), '2022-09-01').outputs.bastionSubnetId.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "3510817712493188866"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for all resources"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "The environment name (dev, test, prod)"
              }
            },
            "workloadName": {
              "type": "string",
              "metadata": {
                "description": "The workload name"
              }
            },
            "bastionSubnetId": {
              "type": "string",
              "metadata": {
                "description": "Bastion subnet resource ID"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2023-11-01",
              "name": "[format('pip-bas-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                  "domainNameLabel": "[format('bas-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), uniqueString(resourceGroup().id))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2023-11-01",
              "name": "[format('bas-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('pip-bas-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
                      },
                      "subnet": {
                        "id": "[parameters('bastionSubnetId')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('pip-bas-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
              ]
            }
          ],
          "outputs": {
            "bastionHostId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/bastionHosts', format('bas-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            },
            "bastionHostName": {
              "type": "string",
              "value": "[format('bas-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))]"
            },
            "bastionPublicIpId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/publicIPAddresses', format('pip-bas-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location')))]"
            },
            "bastionPublicIpAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('pip-bas-{0}-{1}-{2}', parameters('workloadName'), parameters('environment'), parameters('location'))), '2023-11-01').ipAddress]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deploy-hub-vnet')]"
      ]
    }
  ],
  "outputs": {
    "hubVnetId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-hub-vnet'), '2022-09-01').outputs.hubVnetId.value]"
    },
    "spokeVnetId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-spoke-vnet'), '2022-09-01').outputs.spokeVnetId.value]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[parameters('existingKeyVaultName')]"
    },
    "keyVaultUri": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('existingKeyVaultName')), '2023-07-01').vaultUri]"
    },
    "vmName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-virtual-machine'), '2022-09-01').outputs.vmName.value]"
    },
    "vmPrivateIpAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-virtual-machine'), '2022-09-01').outputs.vmPrivateIpAddress.value]"
    },
    "sqlServerName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-sql-database'), '2022-09-01').outputs.sqlServerName.value]"
    },
    "sqlServerFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-sql-database'), '2022-09-01').outputs.sqlServerFqdn.value]"
    },
    "sqlDatabaseName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-sql-database'), '2022-09-01').outputs.sqlDatabaseName.value]"
    },
    "bastionHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-bastion'), '2022-09-01').outputs.bastionHostName.value]"
    },
    "bastionPublicIpAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-bastion'), '2022-09-01').outputs.bastionPublicIpAddress.value]"
    }
  }
}